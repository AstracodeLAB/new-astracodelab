@use './variables.scss' as *;
@use 'sass:map';

.workingMov {
	&__timeline {
		padding-left: 30px;

		&-list {
			display: flex;
			flex-direction: column;
			position: relative;
			border-left: 6px solid $purple;
			transition: background-color 0.3s ease, border-color 0.3s ease;
			align-items: flex-start;
			&.active {
				border-left: 6px solid $green;
			}

			&-item {
				display: flex;
				justify-content: center;
				&-circle {
					position: absolute;
					width: 1.5rem;
					height: 1.5rem;
					background-color: $purple;
					border-radius: 50%;
					left: -0.95rem;
					transition: background-color 0.3s ease, border-color 0.3s ease;
				}
				&-circle.active {
					background-color: $green; // Change to any color you want
					border-color: $white;
				}
				&-text {
					padding: 0 20px;
					&-title {
						font-family: map.get($h3, 'font-family');
						font-size: map.get($h3, 'font-size');
						color: map.get($h3, 'color');
						font-weight: map.get($h3, 'font-weight');

						@media (min-width: $bp-m) {
							font-family: map.get($h3-desktop, 'font-family');
							font-size: map.get($h3-desktop-services, 'font-size');
							color: map.get($h3-desktop, 'color');
							font-weight: map.get($h3-desktop, 'font-weight');
							text-align: start;
						}
					}
					&-paragraph {
						margin-bottom: 1rem;
						font-family: map.get($paragraph, 'font-family');
						font-size: map.get($paragraph, 'font-size');
						color: map.get($paragraph, 'color');
						line-height: map.get($paragraph, 'line-height');
						text-align: start;
						padding: 0 16px 0 16px;

						@media (min-width: $bp-m) {
							display: flex;
							font-family: map.get($paragraph-desktop, 'font-family');
							font-size: map.get($paragraph-desktop, 'font-size');
							color: map.get($paragraph-desktop, 'color');
							line-height: map.get($paragraph-desktop, 'line-height');
							text-align: start;
							padding: 0 5px 0 0;
						}
					}
				}
			}
		}
	}
}
