@use 'sass:map';
@use 'sass:color';
@use './variables.scss' as *;

// ===========================
// LAYOUT COMPONENTS
// ===========================
.pricing-section {

  background: $blue-secondary;

  display: flex;
  align-items: center;
  font-family: $font-primary;
  
}

.pricing-container {
  // max-width: 1000px;
  // margin: 0 auto;
  // width: 100%;
  // padding: 0 clamp(0rem, 4vw, 2rem);
}

.pricing-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  align-items: stretch;
  justify-items: center;

  @media (max-width: 600px) {
    display: none;
  }

  @media (min-width: 601px) and (max-width: 1024px) {
    gap: clamp(1rem, 3vw, 2rem);
  }

  @media (min-width: 1024px) {
    gap: 2rem;
  }
}

.mobile-carousel {
  display: none;

  @media (max-width: 600px) {
    display: block;
  }
}

// ===========================
// CAROUSEL COMPONENTS
// ===========================
.carousel-container {
  position: relative;
  overflow: hidden;
  border-radius: 16px;

  @media (max-width: 600px) {
    max-width: 280px;
    margin: 0 auto;
  }
}

.carousel-track {
  display: flex;
  transition: transform 0.3s ease;
  width: 300%;
  height: auto;
  
  @media (max-width: 600px) {
    width: 300%;
  }
}

.carousel-btn {
  position: absolute;
  top: 45%;
  transform: translateY(-50%);
  border: none;
  background: rgba(100, 30, 255, 0.9);
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 15;
  box-shadow: 0px 2px 12px rgba(42, 17, 96, 0.25);
  transition: all 0.3s ease;
  width: 36px;
  height: 36px;

  @media (max-width: 600px) {
    width: 32px;
    height: 32px;
  }

  svg {
    width: 18px;
    height: 18px;
    color: white;

    @media (max-width: 600px) {
      width: 16px;
      height: 16px;
    }
  }

  &:hover {
    background: $blue-primary;
    box-shadow: 0px 4px 16px rgba(100, 30, 255, 0.4);
    transform: translateY(-50%) scale(1.05);
  }

  &.prev {
    left: -18px;
    
    @media (max-width: 600px) {
      left: 10px;
    }
  }

  &.next {
    right: -18px;
    
    @media (max-width: 600px) {
      right: 10px;
    }
  }
}

.carousel-dots {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1.5rem;

  .dot {
    width: 12px;
    height: 12px;
    border: none;
    border-radius: 50%;
    background: rgba(42, 17, 96, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;

    &.active {
      background: $blue-primary;
      transform: scale(1.2);
    }
  }
}

// ===========================
// CARD COMPONENTS
// ===========================
.pricing-card {
  border-radius: 10px;
  background: $cardWhite;

  // box-shadow: -4px 0 4px 0 rgba(0, 0, 0, 0.25), 4px 0 5px 4px rgba(0, 0, 0, 0.25);
  // position: relative;
  // transition: transform 0.3s ease;
  // display: flex;
  // flex-direction: column;
  // @media (min-width: 768px) {
  //   &:hover {
  //       transform: translateY(-2px);
  //       box-shadow: 0px 4px 10px 0px rgba(42, 17, 96, 0.20);
  //   }
  // }
  // &.mobile {
  //   display:flex;
  //   width: 260px;
  //   flex-direction: column;
  //   // margin-right: 0;
  //   min-height: auto;
  //   height: auto;   
    
  //   @media (max-width: 600px) {
  //     width: 280px;
  //     flex: 0 0 280px;
  //     padding: 1.2rem;

  //   }

 

  &.highlighted {
    border: 1px solid $blue-primary;

    
    @media (min-width: 1024px) {
      transform: scale(1.05);
      z-index: 2;
    }
  }

  @media (min-width: 601px) and (max-width: 1024px) {
    max-width: clamp(240px, 25vw, 280px);
  }
}

.badge {
  text-align: center;
  background: $blue-primary;
  color:$cardWhite;
  border-radius: 10px 10px 0px 0px;
  font-size: map.get($SmallText-mobile, 'font-size');
  line-height: map.get($SmallText-mobile, 'line-height');
  letter-spacing: map.get($SmallText-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($SmallText-tablet, 'font-size');
    line-height: map.get($SmallText-tablet, 'line-height');
    letter-spacing: map.get($SmallText-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($SmallText-desktop, 'font-size');
    line-height: map.get($SmallText-desktop, 'line-height');
    letter-spacing: map.get($SmallText-desktop, 'letter-spacing');
  }
}

// ===========================
// CARD CONTENT
// ===========================
.pricing-header {
  text-align: center;
  margin-bottom: 1.5rem;
  margin-top: 1rem;
  


  @media (max-width: 600px) {
    margin-bottom: 0.8rem;
    margin-top: 0.5rem;
  }
    &.nb {
      padding-top: 28px;
    }
}


.price-label {
  color: $text-bg-white;
  font-size: map.get($Body-mobile, 'font-size');
  line-height: map.get($Body-mobile, 'line-height');
  letter-spacing: map.get($Body-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($Body-tablet, 'font-size');
    line-height: map.get($Body-tablet, 'line-height');
    letter-spacing: map.get($Body-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($Body-desktop, 'font-size');
    line-height: map.get($Body-desktop, 'line-height');
    letter-spacing: map.get($Body-desktop, 'letter-spacing');
  }

}

.price {
  color: $title-color;
  margin-bottom: 0.25rem;
  font-weight: 700;
  font-size: map.get($H1-mobile, 'font-size');
  line-height: map.get($H1-mobile, 'line-height');
  letter-spacing: map.get($H1-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($H1-tablet, 'font-size');
    line-height: map.get($H1-tablet, 'line-height');
    letter-spacing: map.get($H1-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($H1-desktop, 'font-size');
    line-height: map.get($H1-desktop, 'line-height');
    letter-spacing: map.get($H1-desktop, 'letter-spacing');
  }
}

.price-note {
  color:$text-bg-white;
  margin-bottom: 0.5rem;
  margin-right: 30px;
  text-align: right;
  font-size: map.get($SmallText-mobile, 'font-size');
  line-height: map.get($SmallText-mobile, 'line-height');
  letter-spacing: map.get($SmallText-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($SmallText-tablet, 'font-size');
    line-height: map.get($SmallText-tablet, 'line-height');
    letter-spacing: map.get($SmallText-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($SmallText-desktop, 'font-size');
    line-height: map.get($SmallText-desktop, 'line-height');
    letter-spacing: map.get($SmallText-desktop, 'letter-spacing');
  }
}

.plan-title {
  color: $title-color;
  height: 25px;
  background-color:$blue-secondary;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.5px;
  font-size: map.get($SmallText-mobile, 'font-size');
  line-height: map.get($SmallText-mobile, 'line-height');
  letter-spacing: map.get($SmallText-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($SmallText-tablet, 'font-size');
    line-height: map.get($SmallText-tablet, 'line-height');
    letter-spacing: map.get($SmallText-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($SmallText-desktop, 'font-size');
    line-height: map.get($SmallText-desktop, 'line-height');
    letter-spacing: map.get($SmallText-desktop, 'letter-spacing');
  }
}

.plan-description {
  text-align: center;
  color:$text-bg-white;
  margin-bottom: 2rem;
  margin-right:10px;
  font-size: map.get($Body-mobile, 'font-size');
  line-height: map.get($SmallText-mobile, 'line-height');
  letter-spacing: map.get($SmallText-mobile, 'letter-spacing');

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($SmallText-tablet, 'font-size');
      line-height: map.get($SmallText-tablet, 'line-height');
      letter-spacing: map.get($SmallText-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($SmallText-desktop, 'font-size');
      line-height: map.get($SmallText-desktop, 'line-height');
      letter-spacing: map.get($SmallText-desktop, 'letter-spacing');
  }
}

// ===========================
// FEATURES LIST
// ===========================
.features-list {
  list-style: none;
  padding: 0 20px;
  margin: 0 0 2rem 0;
  flex-grow: 1;


}

.feature-item {
  display: flex;
  align-items: flex-start;
  margin-bottom: 0.75rem;
  color: #333;
  font-size: 14px;
  line-height: 1.4;

  @media (max-width: 600px) {
    font-size: 13px;
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }

  .check-icon {
    width: 1.1rem;
    height: 1.1rem;
    color: $blue-primary;
    margin-right: 0.6rem;
    flex-shrink: 0;
    margin-top: 0.1rem;

    @media (max-width: 600px) {
      width: 1rem;
      height: 1rem;
      margin-right: 0.5rem;
    }
  }
}

// ===========================
// BUTTONS
// ===========================
.cta-button {
  width: 100%;
  border: none;
  border-radius: 25px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  box-sizing: border-box;
  letter-spacing: 0.5px;
  padding: 0.9rem 1.5rem;
  font-weight: 500;
  font-size: map.get($Button-mobile, 'font-size');
  line-height: map.get($Button-mobile, 'line-height');

  @media (min-width: 601px) {
    padding: 1rem 2rem;
  }

  @media (max-width: 600px) {
    margin-top: 0;
    padding: 0.9rem 1.5rem;
  }

  @media (min-width: 768px) and (max-width: 1024px) {
    font-size: map.get($Button-tablet, 'font-size');
    line-height: map.get($Button-tablet, 'line-height');
    letter-spacing: map.get($Button-tablet, 'letter-spacing');
  }

  @media (min-width: 1024px) {
    font-size: map.get($Button-desktop, 'font-size');
    line-height: map.get($Button-desktop, 'line-height');
    letter-spacing: map.get($Button-desktop, 'letter-spacing');
  }

  &.primary {
    background: $blue-primary;
    color: white;
    font-weight: 600;

    &:hover {
      background: color.adjust($blue-primary, $lightness: -5%);
      transform: translateY(-1px);
      box-shadow: 0 6px 20px rgba(100, 30, 255, 0.3);
    }
  }

  &.secondary {
    background: transparent;
    color: $blue-primary;
    border: 1.5px solid rgba(100, 30, 255, 0.3);
    font-weight: 500;

    &:hover {
      background: rgba(100, 30, 255, 0.05);
      border-color: $blue-primary;
      transform: translateY(-1px);
    }
  }
}