@use 'sass:map';
@use './variables.scss' as *;

.incluye {
  padding: 60px 20px 60px 20px;
  display: flex;
  flex-direction: column;
  gap: 1.25rem;

  @media (min-width: 768px) {
    padding: 60px 120px 0 120px;
  }

  @media (min-width: 1024px) {
    padding: 120px 0 0 0;
    max-width: 904px;
    margin: 0 auto;
  }

  @media (min-width: 1440px) {
    max-width: 1024px;
  }

  &__intro {
    display: flex;
    flex-direction: column;
    gap: 0.63rem;

    @media (min-width: 768px) {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-areas: 
        "title img"
        "text text";
      gap: 1.25rem;

      @media (min-width: 1024px) {
        grid-template-columns: repeat(2, 1fr);
        grid-template-areas: 
        "title img"
        "text img";
      //gap: 1.25rem;
      }
    }
    &-title {
      grid-area: title;
    }
    &-img {
      display: flex;
      justify-content: center;
      grid-area: img;
      
      &-item {
      max-width: 250px;
      display: block;
      //margin: 20px auto;
      box-shadow: $shadow;
      border-radius: 15px;
  
      @media (min-width: 768px) {
       max-width: 100%;  
       height: 100%;   
      }

      @media (min-width: 1005px) {
        margin-bottom: 0.1px;
        margin-top: 0;
        max-width: 100%;
      }
      }
      
    }
    &-text {
      grid-area: text;
      font-family: $font-primary;
      color: $text-bg-white;
      letter-spacing: map.get($Body-mobile, letter-spacing);
      line-height: map.get($Body-mobile, line-height);
      font-size: map.get($Body-mobile, font-size);
      font-weight: map.get($Body-mobile, font-weight);

    @media (min-width: 768px) {
      letter-spacing: map.get($Body-tablet, letter-spacing);
      line-height: map.get($Body-tablet, line-height);
      font-size: map.get($Body-tablet, font-size);
      font-weight: map.get($Body-tablet, font-weight);
    }

    @media (min-width: 1024px) {
      letter-spacing: map.get($Body-desktop, letter-spacing);
      line-height: map.get($Body-desktop, line-height);
      font-size: map.get($Body-desktop, font-size);
      font-weight: map.get($Body-desktop, font-weight);
    }

    @media (min-width: 1440px) {
      letter-spacing: map.get($Body-desktop-xl, letter-spacing);
      line-height: map.get($Body-desktop-xl, line-height);
      font-size: map.get($Body-desktop-xl, font-size);
      font-weight: map.get($Body-desktop-xl, font-weight);
    }
    }
  }

  &__paragraphs {
      font-family: $font-primary;
      color: $text-bg-white;
      letter-spacing: map.get($Body-mobile, letter-spacing);
      line-height: map.get($Body-mobile, line-height);
      font-size: map.get($Body-mobile, font-size);
      font-weight: map.get($Body-mobile, font-weight);
      display: flex;
      flex-direction: column;
      gap: 0.65rem;
    @media (min-width: 768px) {
      letter-spacing: map.get($Body-tablet, letter-spacing);
      line-height: map.get($Body-tablet, line-height);
      font-size: map.get($Body-tablet, font-size);
      font-weight: map.get($Body-tablet, font-weight);
    }

    @media (min-width: 1024px) {
      letter-spacing: map.get($Body-desktop, letter-spacing);
      line-height: map.get($Body-desktop, line-height);
      font-size: map.get($Body-desktop, font-size);
      font-weight: map.get($Body-desktop, font-weight);
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 1.5rem;
      justify-content: space-between;
    }

    @media (min-width: 1440px) {
      letter-spacing: map.get($Body-desktop-xl, letter-spacing);
      line-height: map.get($Body-desktop-xl, line-height);
      font-size: map.get($Body-desktop-xl, font-size);
      font-weight: map.get($Body-desktop-xl, font-weight);
    }

    &-text {
      @media (min-width: 1024px) {
        flex: 0 0 440px;
       
      }
      @media (min-width: 1440px) {
        flex: 0 0 500px;
       
      }
    }
  
    &-text--full {
      @media (min-width: 1024px) {
        flex: 0 0 100%;
        max-width: 100%;
      }
    }
  }
}
