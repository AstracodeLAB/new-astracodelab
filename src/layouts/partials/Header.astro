---
import Buttons from '../components/Buttons/Buttons.astro';
import Logo from '../components/Logo.astro';
---

<header class='header header__text'>
  <nav class='navigation' aria-label='Men√∫ principal'>
    <div class='navigation__container'>
      <!-- Logo -->
      <div class='navigation__container-logo'>
        <Logo />
      </div>

      <!-- Bot√≥n hamburguesa (m√≥vil) -->
      <button
        id='nav-toggle'
        class='navigation__container-button navigation__container-button--open'
        aria-expanded='false'
        aria-controls='nav-menu'
        aria-label='Abrir men√∫'
        type='button'
      >
        <svg class='navigation__container-button-icon' viewBox='0 0 20 20'>
          <title>Abrir men√∫</title>
          <path d='M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z'></path>
        </svg>
      </button>

      <!-- Men√∫ principal -->
      <ul id='nav-menu' class='navigation__container-menu' aria-hidden='true'>
        <!-- Bot√≥n cerrar dentro del men√∫ m√≥vil -->
        <li class='navigation__container-menu-item navigation__container-menu-item-close'>
          <button
            class='navigation__container-button navigation__container-button--close'
            aria-label='Cerrar men√∫'
            type='button'
            id='close-menu'
          >
            <svg class='navigation__container-button-icon' viewBox='0 0 20 20'>
              <title>Cerrar men√∫</title>
              <polygon
                points='11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2'
                transform='rotate(45 10 10)'></polygon>
            </svg>
          </button>
        </li>

        <!-- Mega men√∫ -->
        <li class='navigation__container-menu-itemsMap'>
          <button
            id='services-btn'
            class='navigation__container-menu-itemsMap-link'
            aria-expanded='false'
            aria-controls='submenu-services'
            type='button'
          >
            Servicios
            <svg
              id='services-arrow'
              class='navigation__container-menu-itemsMap-arrow'
              viewBox='0 0 20 20'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path d='M5 7l5 5 5-5H5z'></path>
            </svg>
          </button>

          <div id='submenu-services' class='navigation__container-megamenu' aria-hidden='true'>
            <div class='megamenu-column'>
              <a href='/servicios/diseno-web'><h3>Dise√±o y desarrollo web</h3></a>
              <a href='/servicios/web-corporativa'>Web corporativa</a>
              <a href='/servicios/tienda-online'>Tienda online / e-commerce</a>
              <a href='/servicios/landing-page'>Landing pages</a>
              <a href='/servicios/redisenio-web'>Redise√±o web</a>
            </div>
            <div class='megamenu-column'>
              <a href='/servicios/funcionalidades-optimizacion-web'><h3>Funcionalidades y Optimizaci√≥n</h3></a>
              <a href='/servicios/web-multilingue'>Web multiling√ºe</a>
              <a href='/servicios/sistemas-de-reservas'>Sistemas de reservas</a>
              <a href='/servicios/accesibilidad-web'>Accesibilidad web</a>
              <a href='/servicios/cartas-digitales-restaurantes'>Cartas digitales para restaurantes</a>
            </div>
            <div class='megamenu-column'>
              <h3>Mantenimiento y soporte</h3>
              <a href='/servicios/mantenimiento-web'>Mantenimiento web</a>
              <a href='/servicios/hosting-dominio'>Hosting y dominio</a>
            </div>
          </div>
        </li>

        <li class='navigation__container-menu-itemsMap'>
          <a href='/sobre-nosotras' class='navigation__container-menu-itemsMap-link'>Astracodelab</a>
        </li>

        <li class='navigation__container-menu-itemsMap'>
          <a href='/#contact' class='navigation__container-menu-itemsMap-link'>Contacto</a>
        </li>

        <li class='navigation__container-menu-itemsMap cta-mobile'>
          <Buttons
            href='https://wa.me/34623752940'
            target='_blank'
            rel='noopener noreferrer'
            className='btnPrimaryLight'>¬øHablamos?</Buttons
          >
        </li>
      </ul>

      <div class='button-header'>
        <Buttons href='https://wa.me/34623752940' target='_blank' rel='noopener noreferrer' className='btnPrimaryLight'
          >¬øHablamos?</Buttons
        >
      </div>
    </div>
  </nav>
</header>

<script is:inline>
  // Esperar a que el DOM est√© listo y tambi√©n a las transiciones de Astro
  function initializeNavigation() {
    console.log('üîÑ Inicializando navegaci√≥n...');

    const navToggle = document.getElementById('nav-toggle');
    const navMenu = document.getElementById('nav-menu');
    const closeBtn = document.getElementById('close-menu');
    const servicesBtn = document.getElementById('services-btn');
    const submenu = document.getElementById('submenu-services');

    if (!navToggle || !navMenu || !servicesBtn || !submenu) {
      console.error('‚ùå No se encontraron elementos del men√∫');
      return;
    }

    let isMenuOpen = false;
    let isSubmenuOpen = false;

    // Funci√≥n para toggle del men√∫ m√≥vil
    const toggleMenu = (open) => {
      isMenuOpen = open;
      navToggle.setAttribute('aria-expanded', open.toString());
      navMenu.setAttribute('aria-hidden', (!open).toString());
      navMenu.style.display = open ? 'block' : 'none';

      // Cerrar submen√∫ cuando se cierra el men√∫ principal
      if (!open) {
        toggleSubmenu(false);
      }

      console.log(`üì± Men√∫ ${open ? 'abierto' : 'cerrado'}`);
    };

    // Funci√≥n para toggle del submen√∫ de servicios
    const toggleSubmenu = (open) => {
      isSubmenuOpen = open;
      servicesBtn.setAttribute('aria-expanded', open.toString());
      submenu.setAttribute('aria-hidden', (!open).toString());
      submenu.style.display = open ? 'flex' : 'none';

      const arrow = document.getElementById('services-arrow');
      if (arrow) {
        arrow.style.transform = open ? 'rotate(180deg)' : 'rotate(0deg)';
      }

      console.log(`üéØ Submen√∫ ${open ? 'abierto' : 'cerrado'}`);
    };

    // Event listeners con CAPTURE phase para mayor prioridad
    navToggle.addEventListener(
      'click',
      (e) => {
        console.log('üîÑ Click en toggle men√∫');
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        toggleMenu(!isMenuOpen);
      },
      true
    );

    closeBtn.addEventListener(
      'click',
      (e) => {
        console.log('‚ùå Click en cerrar men√∫');
        e.preventDefault();
        e.stopPropagation();
        toggleMenu(false);
      },
      true
    );

    servicesBtn.addEventListener(
      'click',
      (e) => {
        console.log('üéØ Click en servicios');
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        toggleSubmenu(!isSubmenuOpen);
      },
      true
    );

    // Cerrar men√∫s al hacer clic fuera
    document.addEventListener('click', (e) => {
      if (isMenuOpen && !navMenu.contains(e.target) && !navToggle.contains(e.target)) {
        console.log('üëÜ Click fuera - cerrando men√∫');
        toggleMenu(false);
      }

      if (isSubmenuOpen && !servicesBtn.contains(e.target) && !submenu.contains(e.target)) {
        console.log('üëÜ Click fuera - cerrando submen√∫');
        toggleSubmenu(false);
      }
    });

    // Cerrar men√∫s al hacer clic en enlaces (para navegaci√≥n)
    const navLinks = navMenu.querySelectorAll('a[href^="/"]');
    navLinks.forEach((link) => {
      link.addEventListener('click', () => {
        console.log('üîó Click en enlace - cerrando men√∫s');
        toggleMenu(false);
        toggleSubmenu(false);
      });
    });

    // Cerrar con tecla Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        if (isSubmenuOpen) {
          toggleSubmenu(false);
        } else if (isMenuOpen) {
          toggleMenu(false);
        }
      }
    });

    console.log('‚úÖ Navegaci√≥n inicializada correctamente');
  }

  // Inicializar cuando el DOM est√© listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeNavigation);
  } else {
    initializeNavigation();
  }

  // Re-inicializar despu√©s de las transiciones de Astro
  document.addEventListener('astro:page-load', initializeNavigation);
  document.addEventListener('astro:after-swap', initializeNavigation);

  // Tambi√©n inicializar despu√©s de un timeout por si acaso
  setTimeout(initializeNavigation, 100);
</script>
